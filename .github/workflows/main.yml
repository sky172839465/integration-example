name: main
on:
  # schedule:
  #   - cron: "0 10 * * 1"
  pull_request:
    types: [opened, reopened, synchronize, closed]
  workflow_dispatch:

permissions:
  actions: write
  contents: write
  pull-requests: write
  id-token: write

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy_flyio:
    name: Deploly fly.io review app
    if: ${{ github.event_name == 'pull_request' && github.event.action != 'closed' }}
    runs-on: ubuntu-latest
    outputs:
      FLY_IO_URL: ${{ steps.deploy.outputs.url }}
    environment:
      name: test-${{ github.event.number }}
      url: ${{ steps.deploy.outputs.url }}
    # Only run one deployment at a time per PR.
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - uses: actions/checkout@v4

      - name: Deploy fly.io
        id: deploy
        uses: superfly/fly-pr-review-apps@1.2.0
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

  deploy_gh_page:
    name: Deploly github.io review app
    if: ${{ github.event_name == 'workflow_dispatch' }}
    outputs:
      FLY_IO_URL: ${{ steps.deploy.outputs.url }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: "./build"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  static_and_unit_test:
    name: Static test and unit test
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Lint test
        run: npm run ci-lint

      - name: Unit test
        run: npm run ci-test

      - uses: actions/upload-artifact@v3
        with:
          name: lint-output
          path: lint.log

      - uses: actions/upload-artifact@v3
        with:
          name: unit-test-output
          path: ./reports

  functional_test:
    needs: [deploy_flyio, deploy_gh_page]
    name: Functional test
    runs-on: ubuntu-latest
    env:
      SAUCE_USERNAME: sky172839465
      SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run functional test on saucelabs
        env:
          FLY_IO_URL: ${{ needs.deploy_flyio.outputs.FLY_IO_URL || needs.deploy_gh_page.outputs.FLY_IO_URL }}
        run: |
          echo FLY_IO_URL=$FLY_IO_URL
          npm run ci-functional

      - name: Generate functional test allure report
        run: npm run functional:generate-report

      - uses: actions/upload-artifact@v3
        with:
          name: functional-test-output
          path: ./output

      - name: Get report info
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { getGHPageInfo } = require('./scripts/ghpage-helper')
            const info = await getGHPageInfo({ context })
            core.exportVariable('E2E_REPORT_DIR', `./${info.destination_dir}`)

      - name: Upload report to GitHub page
        if: ${{ always() }}
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./e2e-reports
          destination_dir: ${{ env.E2E_REPORT_DIR }}
          commit_message: "docs: ü§ñ upload pr report ${{ github.event.head_commit.message }}"
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

  clean_up:
    needs: [deploy_flyio, deploy_gh_page, functional_test]
    name: Clean up
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('package-lock.json') }}

      - uses: actions/download-artifact@v3
        with:
          name: lint-output

      - uses: actions/download-artifact@v3
        with:
          name: unit-test-output
          path: ./reports

      - uses: actions/download-artifact@v3
        with:
          name: functional-test-output
          path: ./output

      - name: Get report info
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const { getGHPageInfo } = require('./scripts/ghpage-helper')
            const info = await getGHPageInfo({ context })
            console.log(info)
            core.exportVariable('GH_PAGE_URL', info.ghPage)

      - name: Get build comment
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            const getComment = require('./scripts/get-comment')
            const comment = await getComment(
              { context },
              '${{ needs.deploy_flyio.outputs.FLY_IO_URL || needs.deploy_gh_page.outputs.FLY_IO_URL }}'
            )
            console.log(comment)
            core.exportVariable('BUILD_COMMENT', comment)
          result-encoding: string

      - name: Comment build result to pr
        if: ${{ always() && github.event_name == 'pull_request' }}
        uses: unsplash/comment-on-pr@master
        with:
          msg: ${{ env.BUILD_COMMENT }}
          check_for_duplicate_msg: true
          delete_prev_regex_msg: "Build Result"

      - name: Comment build result to issue
        if: ${{ always() && github.event_name == 'workflow_dispatch' }}
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.SOURCE_TREE_PROTECTED_BRANCH_TOKEN }}
          comment-id: 1890858131
          body: ${{ env.BUILD_COMMENT }}
          edit-mode: replace

      - name: Last check build status
        if: ${{ always() }}
        uses: actions/github-script@v6
        with:
          script: |
            if (process.env.BUILD_COMMENT.includes('‚ùå')) {
              console.error('Job failed.')
              process.exit(1)
            }

  delete_develpoment:
    name: Delete Develpoment
    if: ${{ github.event.action == 'closed' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: üóë Delete deployment environment
        uses: strumwolf/delete-deployment-environment@v2.2.3
        with:
          token: ${{ secrets.SOURCE_TREE_PROTECTED_BRANCH_TOKEN }}
          environment: test-${{ github.event.number }}
          ref: ${{ github.ref_name }}
